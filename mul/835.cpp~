#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>
using namespace std;

const int N = 805;

int n;

struct Mat {
    int v, num;
} a[N][N], b[N][N];

int an[N], bn[N];
int c[N][N];

int main() {
    while (~scanf("%d", &n)) {
	int num;
	memset(an, 0, sizeof(an));
	memset(bn, 0, sizeof(bn));
	for (int i = 0; i < n; i++) {
	    for (int j = 0; j < n; j++) {
		scanf("%d", &num);
		num %= 3;
		if (num == 0) continue;
		a[i][an[i]].v = j;
		a[i][an[i]++].num = num;
	    }
	}
	for (int i = 0; i < n; i++)
	    for (int j = 0; j < n; j++)
		scanf("%d", &c[i][j]);
	for (int i = 0; i < n; i++) {
	    for (int j = 0; j < n; j++) {
		int num = c[j][i] % 3;
		if (num == 0) continue;
		b[i][bn[i]].v = j;
		b[i][bn[i]++].num = num;
	    }
	}
	memset(c, 0, sizeof(c));
	for (int i = 0; i < n; i++) {
	    for (int j = 0; j < n; j++) {
		int l = 0, r = 0;
		while (l < an[i] && r < bn[j]) {
		    if (a[i][l].v == b[j][r].v) {
			c[i][j] = (c[i][j] + a[i][l].num * b[j][r].num) % 3;
			l++; r++;
		    }
		    else if (a[i][l].v < b[j][r].v) l++;
		    else r++;
		}
	    }
	}
	for (int i = 0; i < n; i++) {
	    for (int j = 0; j < n; j++) {
		printf("%d%c", c[i][j], j == n - 1 ? '\n' : ' ');
	    }
	}
    }
    return 0;
}
